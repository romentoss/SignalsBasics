name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master  # O la rama que desees usar para el despliegue

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Hacer checkout del c贸digo
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configurar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Paso 3: Instalar dependencias de npm
      - name: Install dependencies
        run: npm install

      # Paso 4: Instalar Angular CLI
      - name: Install Angular CLI
        run: npm install -g @angular/cli

      # Paso 5: Construir la aplicaci贸n con baseHref
      - name: Build Angular app
        run: ng build --configuration production --base-href "https://romentoss.github.io/SignalsBasics/"

      # Paso 6: Verificar si los archivos de construcci贸n existen
      - name: Verify build output
        run: |
          ls -la dist/SignalsBasics
          cat dist/SignalsBasics/index.html

      # Paso 7: Crear archivo .nojekyll para evitar que GitHub lo procese
      - name: Create .nojekyll file
        run: touch dist/SignalsBasics/.nojekyll

      # Paso 8: Instalar la herramienta angular-cli-ghpages
      - name: Install gh-pages tool
        run: npm install --save-dev angular-cli-ghpages

      # Paso 9: Desplegar la aplicaci贸n a GitHub Pages
      - name: Deploy to GitHub Pages
        run: npx angular-cli-ghpages --dir=dist/SignalsBasics

      # Paso 10: Hacer el commit en la rama gh-pages
      - name: Commit and push to gh-pages branch
        run: git push --force "https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" gh-pages
